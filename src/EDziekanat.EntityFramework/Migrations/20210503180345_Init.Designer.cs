// <auto-generated />
using System;
using EDziekanat.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EDziekanat.EntityFramework.Migrations
{
    [DbContext(typeof(EDziekanatDbContext))]
    [Migration("20210503180345_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EDziekanat.Core.Permissions.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a1ccb43-fa4f-48ce-b601-d3ab4d611b32"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Administration access",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Administration"
                        },
                        new
                        {
                            Id = new Guid("28126ffd-51c2-4201-939c-b64e3df43b9d"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Member access",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Member_Access"
                        },
                        new
                        {
                            Id = new Guid("86d804bd-d022-49a5-821a-d2240478aac4"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "User read",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_User_Read"
                        },
                        new
                        {
                            Id = new Guid("8f3de3ec-3851-4ba9-887a-2119f18ae744"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "User create",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_User_Create"
                        },
                        new
                        {
                            Id = new Guid("068a0171-a141-4eb2-854c-88e43ef9ab7f"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "User update",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_User_Update"
                        },
                        new
                        {
                            Id = new Guid("70b5c5c3-2267-4f7c-b0f9-7ecc952e04a6"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "User delete",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_User_Delete"
                        },
                        new
                        {
                            Id = new Guid("80562f50-8a7d-4bcd-8971-6d856bbcbb7f"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Role read",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Role_Read"
                        },
                        new
                        {
                            Id = new Guid("d4d7c0e3-efcf-4dd2-86e7-17d69fda8c75"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Role create",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Role_Create"
                        },
                        new
                        {
                            Id = new Guid("ea003a99-4755-4c19-b126-c5cffbc65088"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Role update",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Role_Update"
                        },
                        new
                        {
                            Id = new Guid("8f76de0b-114a-4df8-a93d-cec927d06a3c"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatorId = new Guid("00000000-0000-0000-0000-000000000000"),
                            DisplayName = "Role delete",
                            ModificationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifierId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permissions_Role_Delete"
                        });
                });

            modelBuilder.Entity("EDziekanat.Core.Roles.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSystemDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            ConcurrencyStamp = "dc55b95c-2b9d-42f4-b4ae-0e33b5178c6d",
                            IsSystemDefault = true,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = new Guid("11d14a89-3a93-4d39-a94f-82b823f0d4ce"),
                            ConcurrencyStamp = "510a7a7d-de6c-4edc-8e71-e95cc079c123",
                            IsSystemDefault = true,
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("EDziekanat.Core.Roles.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("EDziekanat.Core.Roles.RolePermission", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("2a1ccb43-fa4f-48ce-b601-d3ab4d611b32")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("28126ffd-51c2-4201-939c-b64e3df43b9d")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("86d804bd-d022-49a5-821a-d2240478aac4")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("8f3de3ec-3851-4ba9-887a-2119f18ae744")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("068a0171-a141-4eb2-854c-88e43ef9ab7f")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("70b5c5c3-2267-4f7c-b0f9-7ecc952e04a6")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("80562f50-8a7d-4bcd-8971-6d856bbcbb7f")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("d4d7c0e3-efcf-4dd2-86e7-17d69fda8c75")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("ea003a99-4755-4c19-b126-c5cffbc65088")
                        },
                        new
                        {
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263"),
                            PermissionId = new Guid("8f76de0b-114a-4df8-a93d-cec927d06a3c")
                        },
                        new
                        {
                            RoleId = new Guid("11d14a89-3a93-4d39-a94f-82b823f0d4ce"),
                            PermissionId = new Guid("28126ffd-51c2-4201-939c-b64e3df43b9d")
                        });
                });

            modelBuilder.Entity("EDziekanat.Core.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c41a7761-6645-4e2c-b99d-f9e767b9ac77"),
                            AccessFailedCount = 5,
                            ConcurrencyStamp = "f9398208-4a5f-4843-ab1c-2a5022f8da3b",
                            Email = "admin@mail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@MAIL.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AM4OLBpptxBYmM79lGOX9egzZk3vIQU3d/gFCJzaBjAPXzYIK3tQ2N7X4fcrHtElTw==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        },
                        new
                        {
                            Id = new Guid("065e903e-6f7b-42b8-b807-0c4197f9d1bc"),
                            AccessFailedCount = 5,
                            ConcurrencyStamp = "17d5916a-e732-44f5-83d5-2b673fa5ff2b",
                            Email = "memberuser@mail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "MEMBERUSER@MAIL.COM",
                            NormalizedUserName = "MEMBERUSER",
                            PasswordHash = "AM4OLBpptxBYmM79lGOX9egzZk3vIQU3d/gFCJzaBjAPXzYIK3tQ2N7X4fcrHtElTw==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "memberuser"
                        },
                        new
                        {
                            Id = new Guid("4b6d9e45-626d-489a-a8cf-d32d36583af4"),
                            AccessFailedCount = 5,
                            ConcurrencyStamp = "5f909e9d-b0b0-4cb6-a64f-2fb7ccc36431",
                            Email = "testadmin@mail.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "TESTADMIN@MAIL.COM",
                            NormalizedUserName = "TESTADMIN",
                            PasswordHash = "AM4OLBpptxBYmM79lGOX9egzZk3vIQU3d/gFCJzaBjAPXzYIK3tQ2N7X4fcrHtElTw==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "testadmin"
                        });
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("c41a7761-6645-4e2c-b99d-f9e767b9ac77"),
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263")
                        },
                        new
                        {
                            UserId = new Guid("4b6d9e45-626d-489a-a8cf-d32d36583af4"),
                            RoleId = new Guid("f22bce18-06ec-474a-b9af-a9de2a7b8263")
                        },
                        new
                        {
                            UserId = new Guid("065e903e-6f7b-42b8-b807-0c4197f9d1bc"),
                            RoleId = new Guid("11d14a89-3a93-4d39-a94f-82b823f0d4ce")
                        });
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken");
                });

            modelBuilder.Entity("EDziekanat.Core.Roles.RoleClaim", b =>
                {
                    b.HasOne("EDziekanat.Core.Roles.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDziekanat.Core.Roles.RolePermission", b =>
                {
                    b.HasOne("EDziekanat.Core.Permissions.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDziekanat.Core.Roles.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserClaim", b =>
                {
                    b.HasOne("EDziekanat.Core.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserLogin", b =>
                {
                    b.HasOne("EDziekanat.Core.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserRole", b =>
                {
                    b.HasOne("EDziekanat.Core.Roles.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EDziekanat.Core.Users.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EDziekanat.Core.Users.UserToken", b =>
                {
                    b.HasOne("EDziekanat.Core.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
